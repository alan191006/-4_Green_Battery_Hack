def EMA(data, window):
    return data.ewm(span=window, min_periods=0, adjust=False, ignore_na=False).mean()

def EMA_strategy(data, short_window, medium_window, long_window):
    signals = pd.DataFrame(index=data.index)
    signals['price'] = data
    
    # calc EMAs
    signals['ShortEMA'] = EMA(data, short_window)
    signals['MediumEMA'] = EMA(data, medium_window)
    signals['LongEMA'] = EMA(data, long_window)
    
    # Generate signals
    signals['Signal'] = 0
    
    signals['Signal'][short_window:] = (signals['ShortEMA'][short_window:] > signals['MediumEMA'][short_window:]) & (signals['MediumEMA'][medium_window:] > signals['LongEMA'][medium_window:])
    
    binary_signals = signals['Signal'].astype(int)
    
    return binary_signals


short_window = 13
medium_window = 73
long_window = 289

# Apply EMA strategy
signals = EMA_strategy(train_df["price"], short_window, medium_window, long_window)

# Backtest the strategy
returns, pnl = backtest(signals, train_df["price"])
print("Returns with $100000 starting capital:", returns)